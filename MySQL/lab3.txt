#q1
CREATE VIEW faculty AS SELECT dept_name, ID, name
FROM instructor;

SELECT printf("%-10s",ID) AS ID, printf("%-10s",name) AS name, printf("%-10s",dept_name) AS dept_name 
from faculty;


#q2
CREATE VIEW faculty AS SELECT dept_name, ID, name
FROM instructor;

SELECT printf("%-10s",name) AS name 
from faculty
where dept_name like "Biology";

#q3
CREATE VIEW department_info AS SELECT dept_name, building
FROM department;

SELECT printf("%-10s",dept_name) AS dept_name, printf("%-10s",building) AS building 
from department_info;

#q4
CREATE VIEW instructor_loc AS SELECT faculty.name as name, faculty.dept_name as dept_name, department_info.building as building
from faculty
LEFT JOIN department_info ON (faculty.dept_name = department_info.dept_name);

SELECT printf("%-10s",name) AS name, printf("%-10s",dept_name) AS dept_name, printf("%-10s",building) AS building 
from instructor_loc;

#q5
ALTER TABLE instructor
ADD COLUMN Image BLOB;

SELECT printf("%-10s", cid) cid,
printf("%-10s",name) as name,
printf("%-10.10s",LOWER(type)) as type ,
printf("%-10s", `notnull`) as `notnull` ,
printf("%-10s",dflt_value) as dflt_value ,
printf("%-10s",pk) as pk 
FROM pragma_table_info('instructor');

#q6
CREATE VIEW prereq_info AS SELECT prereq.course_id, prereq.prereq_id, course.title as title
from prereq
LEFT JOIN course ON (course.course_id = prereq.prereq_id);

select printf("%-0.10s",course.title) AS title, printf("%-0.17s",prereq_info.title) AS title 
from prereq_info 
LEFT JOIN course ON (course.course_id = prereq_info.course_id);

#q7
SELECT printf("%-10s",student.name) AS name, printf("%-10s",instructor.name) AS name FROM student 
JOIN advisor ON (student.ID = advisor.s_ID) 
JOIN instructor ON (instructor.ID = advisor.i_ID)
ORDER BY student.name ASC;

#Q8
SELECT printf("%-10s",instructor.ID) AS ID, printf("%-10s",instructor.name) AS name, printf("%-10s",COALESCE(COUNT(teaches.sec_id), 0)) AS sections
FROM instructor
LEFT JOIN teaches ON (instructor.ID = teaches.ID)
GROUP BY instructor.ID, instructor.name
ORDER BY instructor.name ASC;

#q9
INSERT INTO section (course_id, sec_id, semester, year, building, room_number, time_slot_id)
VALUES ('CS-101', '2', 'Spring', '2010', 'Packard', '101', 'E');

INSERT INTO teaches (ID, course_id, sec_id, semester, year)
VALUES ('10101', 'CS-101', '1', 'Spring', '2010');

SELECT
    printf("%-10s", section.course_id) as course_id,
    printf("%-10s", section.sec_id) as sec_id,
    printf("%-10s", section.semester) as semester,
    printf("%-10s", section.year) as year,
    printf("%-10s", section.building) as building,
    printf("%-10s", section.room_number) as room_number,
    printf("%-10s", section.time_slot_id) as time_slot_id,
    COALESCE(instructor.name, '') AS name
FROM section
LEFT JOIN teaches ON (section.course_id = teaches.course_id AND section.sec_id = teaches.sec_id AND section.semester = teaches.semester AND section.year = teaches.year)
LEFT JOIN instructor ON (teaches.ID = instructor.ID)
WHERE section.semester like 'Spring' AND section.year = 2010
ORDER BY
    section.course_id ASC,
    section.sec_id ASC,
    COALESCE(instructor.name, '') ASC;

#q10
INSERT INTO department (dept_name, building, budget)
VALUES ('Mechanical', 'Watson', 90000);

SELECT printf("%-10s", department.dept_name) AS dept_name, printf("%-10s", COUNT(instructor.ID)) as "count(id)"
FROM department
LEFT JOIN instructor ON (department.dept_name = instructor.dept_name)
GROUP BY department.dept_name
ORDER BY department.dept_name ASC;